---
title: "Quarto example template"
subtitle: "With the KU template"
author: "Claus Thorn Ekstrøm"
date: 2022-09-01
date-format: long
execute:
  error: false
  warning: false
embed-resources: false            # Set to true to create a shareable, embedded html-file  
format: 
  revealjs:
    width: 1244
    height: 700
    center: false                 # Do NOT center (vertical) lvl 2 slides
    transition: fade
    fig-format: svg
    fig-align: center
    navigation-mode: vertical
    slide-number: c               # Set to False to remove slide numbers
    chalkboard: true              # Set false to remove the chalkboard option
    progress: false               # Set true to have a progress bar
    controls: false               # Set true to show slide controls
    controls-layout: bottom-right
    controls-tutorial: true
    html-math-method: mathjax    
    pointer:
      pointerSize: 18
      color: '#32cd32'    
#    self-contained: true
    theme: /Users/ekstrom/ku.scss
# Modify the title slide    
    title-slide-attributes:
      data-background-image: kulogo.png
      data-background-size: 30%
      data-background-position: 100% 100%
revealjs-plugins:
  - pointer          # Change cursor to pointer with key q
  - attribution
editor: source
---

# KU Quarto - theme

```{r}
#| echo: false
library("tidyverse")
source("kutheme.R")   # Get the theme
```


This presentation serves as a skeleton template showing some common parts of a quarto presentation using the KU template.

It is not meant as a tutorial to quarto. That can be found [elsewhere](https://quarto.org/docs/presentations/revealjs/). The purpose is more to keep an extended example that works with the KU theme for easy reference.

In quarto, `:::` is a CSS `div` (3 or more colons).

[*Speaker notes*]{.yellow} are added to a slide using

    ::: {.notes}
    Speaker notes go here.
    :::


::: {.notes}
Speaker notes go here.
:::



# Presenting with quarto

In general: check the help page using [?]{.button}

:::: {.columns}

::: {.column width="50%"}

[F]{.button} Full screen<br>
[S]{.button} Speaker mode<br>
[O]{.button} Overview<br>
[.]{.button} Black out

:::

::: {.column width="50%"}

[B]{.button} Blackboard<br>
[C]{.button} Canvas (draw on current slide)<br>
[Q]{.button} Change cursor to pointer<br>
(requires extension)

:::

::::

Note: you can **zoom in** on any part using [alt]{.button} + left click



# Often used features {background-image="./pics/bambi.gif" background-size="cover"}


## Basic stuff

::: {.class}
<SOME CONTENT>
:::
Some text with a specific [span]{.span-class}

Use `. . .` syntax to indicate a break at an arbitrary location

Also see [this presentation by Tom Mock](https://rstudio-conf-2022.github.io/get-started-quarto/materials/05-presentations.html#/presentations) for additional tips and tricks.

## Background images {background-image="pics/beerandsunset.png"
background-color="black"
background-opacity=.3
background-size="cover"}

Background images are set by adding

`{background-image="..."}` 

with an URL or path to a file and 

`background-size="cover"` 

arguments to the slide header.

Backgrounds can be shaded/tinted by setting

`background-color="black"` or `background-color="white"`
and

`background-opacity=.5` or some other fraction, respectively.



::: attribution
Photo courtesy of [@ingtotheforest](https://unsplash.com/@ingtotheforest)
:::

## Columns


:::: {.columns}

::: {.column width="35%"}

**Left column**

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

:::

::: {.column width="50%"}

**Middle column**

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

:::

::: {.column width="15%"}

**Right column**

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

:::

::::

::: attribution
Photo courtesy of [@ingtotheforest](https://unsplash.com/@ingtotheforest)
:::


## Tables

:::: {.columns}

::: {.column width="50%"}

Manual tables

header1 | header2 | header3
-------|---------|---------
`fun1` | `code1` | text not formatted as code
`fun2` | `code2` | another
`fun3` | `code3` | and again

:::

::: {.column width="50%"}
Generated using `kable`


```{r}
knitr::kable(head(iris, 5), booktabs = TRUE) |>
  kableExtra::kable_styling()
```

:::

::::



## Some extensions

The default `ku` template has


Attributions along the right-hand-edge are created by the attributions extension and with 

::: {.caption-right-vertical}
qOy oy Photo courtesy of [@ingtotheforest](https://unsplash.com/@ingtotheforest)
asd
:::

aasasd

transform: scale(0.5) translate(-100%, -100%);

::: {.notes}
Speaker notes go here.
:::



# Code & R

Code is embedded in standard Rmarkdown chunks. 

By default `echo=FALSE` or inline as here: `r 6+7`

```{r}
#| echo: TRUE
#| eval: FALSE
#| code-line-numbers: "2,4"
1 + 1
sqrt(5)+1
x <- 1:10
LETTERS[x]
```

Highlight specific lines using e.g., `#| code-line-numbers: "2,4"`.

Show only some lines of code by setting, e.g., `#| echo: c(2:3)`


[output-code highlighting missing]{.yellow}



## Og denne


```{r}
#| echo: TRUE
#| eval: FALSE
#| code-fold: show
#| code-line-numbers: "2"
#| code-summary: "Show me the code"
#| code-block-border-left: true
1 + 1
sqrt(5)+1
x <- 1:10
LETTERS[x]
```

or code-show true

## Og denne

```{r}
#| echo: TRUE
#| code-fold: show
#| code-line-numbers: "2"
#| code-summary: "Show the code"
#| code-block-border-left: true
1 + 1
sqrt(5)+1
x <- 1:10
LETTERS[x]
```

or `code-show true`



# Graphics

```{r echo=FALSE,warning=FALSE}
#| out-width: 100%
#| fig-height: 10
mpg_plot2 <- ggplot(mpg[mpg$drv != '4', ], aes(factor(cyl), cty, fill = drv)) + 
  geom_boxplot() +
  labs(title="Here is a **title**",
       subtitle = paste0('Either <span style="color:', ku_colours[2], '">route I</span> or <span style="color:', ku_colours[3], '">route I+II</span>.'),
       x = 'Cylinders', y = 'City MPG', fill = 'Drive Type') + theme(
              plot.title=element_markdown(),
              plot.subtitle=element_markdown()
    ) 


mpg_plot2

```


## Graphics - ggplot2


```{r echo=FALSE, message=FALSE, warning=FALSE, error=FALSE}
#| echo: false
#| fig-align: center
#| fig-width: 20
#| fig-height: 10
#| out-width: 100%

#| fig.width: 12
#| fig.asp: .4
#| out.width: "100%"

p <- ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point(size=3) +
  labs(title="Fuel Efficiency of 232 Cars",
       subtitle = "Using æøå ÆØÅ",
       caption = "And a caption") +
  xlab("Weight (x1000 lb)") + ylab("Miles per Gallon") 
##+
##  theme(text=element_text(size=16, family="Comic Sans MS"))
p + 
  annotate(geom="text", x=3.8, y=27, label="Look at this", hjust="left") + 
  annotate(geom="curve", x=3.7, y=27, xend=3.25, yend=25.2, curvature = .3, arrow=arrow(length = unit(4, "mm")), col="white", size=2)
```

## {}

```{r}
#| echo: false
#| fig-align: center
#| fig-width: 20

#| fig.width: 12
#| fig.asp: .4
#| out.width: "100%"

p
```




# Extensions

To use an extension you need to install it for each of the Quarto projects you want to use it for


## Font Awesome

Install extension with

    quarto install extension quarto-ext/fontawesome

Surround the Font Awesome icon name in `{{<` and `>}}` to obtain

{{< fa brands apple >}}

or even coloured

[{{< fa user-doctor >}}]{.yellow}

The full list of [Font Awesome icons supported is shown here](https://fontawesome.com/search?m=free).