---
title: "Quarto example template"
subtitle: "Aloha"
author: "Claus Thorn Ekstrøm"
date: "Sep 1st, 2022"
format: 
  revealjs:
    width: 1244
    height: 700
    transition: fade
    navigation-mode: vertical
    chalkboard: true
    progress: false
    controls: false
    controls-layout: bottom-right
    controls-tutorial: true    
    pointer:
      pointerSize: 18
      color: '#32cd32'    
#    self-contained: true
    theme: /Users/ekstrom/ku.scss
# Modify the title slide    
    title-slide-attributes:
      data-background-image: kulogowhiteq.png
      data-background-size: 30%
      data-background-position: 100% 100%
revealjs-plugins:
  - pointer          # Change cursor to pointer with key q
editor: source
---

# KU - Quarto 

This presentation serves as a skeleton template showing the most (?) common parts of a quarto presentation using the KU template.

It is not meant as a tutorial to quarto. That can be found [elsewhere](https://quarto.org/docs/presentations/revealjs/). The purpose is more to keep an extended example that works with the KU theme for easy reference.

In quarto `:::` is a CSS `div` (at least 3 colons).

[*Speaker notes*]{.yellow} are added to a slide using

    ::: {.notes}
    Speaker notes go here.
    :::


::: {.notes}
Speaker notes go here.
:::


# Presenting with quarto

In general: check the help page using [?]{.button}

:::: {.columns}

::: {.column width="50%"}

[f]{.button} Full screen<br>
[s]{.button} Speaker mode<br>
[o]{.button} Overview<br>
[.]{.button} Black out

:::

::: {.column width="50%"}

[b]{.button} Blackboard<br>
[c]{.button} Canvas (draw on current slide)<br>
[q]{.button} Change cursor to pointer<br>
(requires extension)

:::

::::

Note: you can **zoom in** on any part using [option]{.button} + left click


## Extra


header1 | header2 | header3
-------|---------|---------
`fun1` | `code1` | text not formatted as code
`fun2` | `code2` | another
`fun3` | `code3` | and again





## Some extensions

The default `ku` template has



# Extensions - nope

Attributions along the right-hand-edge are created by the attributions extension and with 

::: {.caption-right-vertical}
qOy oy Photo courtesy of [@ingtotheforest](https://unsplash.com/@ingtotheforest)
asd
:::

aasasd

transform: scale(0.5) translate(-100%, -100%);

::: {.notes}
Speaker notes go here.
:::


## {background-color="black" background-image="https://placekitten.com/100/100" background-size="100px" background-repeat="repeat"}





## Bullets

When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code


# Code

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r echo=TRUE}
1 + 1
```

## Hvad med denne

asd asd

## Og denne

asd asd asd

# Og så

```{r echo=FALSE,warning=FALSE}
library(ggplot2)
library(ggthemr)

claus <- define_palette(swatch = c('#eeeeee', '#901A1E', 'lightblue', 'green', 'blue', 'brown', 'purple', 'yellow'), 
  gradient = c(lower = 'red', upper = 'green'),
                        background = "#16161d", 
                        text = c("#eeeeee", "#eeeeee"), 
                        line = c("#ee1e1e", "#6e6e6e"), # Axis lines 
                        gridline = "#434343") # Gridlines


ggthemr(claus, layout="scientific", type = 'outer', spacing=1.2)

mpg_plot <- ggplot(mpg[mpg$drv != '4', ], aes(factor(cyl), cty, fill = drv)) + 
  geom_boxplot() + labs(x = 'Cylinders', y = 'City MPG', fill = 'Drive Type') +
  theme(legend.position = 'bottom')
mpg_plot
```

## Graphics - ggplot2

```{r echo=FALSE,message=FALSE, warning=FALSE, error=FALSE}
library(extrafont)
loadfonts()
library(ggplot2)
p <- ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point(size=3) +
  ggtitle("Fuel Efficiency of 32 Cars") +
  xlab("Weight (x1000 lb)") + ylab("Miles per Gallon") +
  theme(text=element_text(size=16, family="Comic Sans MS"))
p
```
